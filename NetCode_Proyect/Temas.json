[
    {
        "Contenido": "<h3>Tema 0: Introduccion a Java</h3>\r\n\r\nJava en un lenguaje moderno de programaci\u00f3n de alto nivel, dise\u00f1ado al inicio de los a\u00f1os 90 por Sun Microsystems y\r\nactualmente propiedad de Oracle.<br><br>\r\n\r\nJava es una Independiente de la Plataforma, lo que significa que \u00a1s\u00f3lo necesitas escribir el programa una vez para \r\npoderlo ejecutar en varias plataformas diferentes! <br><br>\r\n\r\nJava es portable, robusto y din\u00e1mico, con la habilidad de ajustarse a las necesidades de virtualmente cualquier tipo \r\nde aplicaci\u00f3n <br><br>\r\n\r\nJava es utilizado para desarrollar aplicaciones para Android de Google, diversas aplicaciones para Escritorio, como \r\nreproductores multimedia, programas antivirus, Aplicaciones Web, Aplicaciones Empresariales (por ejemplo, Bancarias) \u00a1y muchas m\u00e1s!\r\n<br><br>\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9DE_Z4L8urI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>Tema 2:  A Hello World Program</h3>\r\n\r\nTu primer programa <br><br>\r\n\r\nVamos a comenzar creando un programa sencillo que imprima \"Hello World\" en la pantalla.<br><br>\r\n\tclass MyClass {\r\n<br></br>\r\n&emsp; &emsp; public static void main(String[ ] args) {\r\n<br></br>\r\n&emsp; &emsp; System.out.println(\"Hello World\");\r\n<br></br>\r\n&emsp;\t\t}\r\n<br></br>\r\n}\r\n<br></br>\r\n\tEn Java, cada l\u00ednea de c\u00f3digo que se puede ejecutar necesita estar dentro de una clase.\r\n\tEn nuestro ejemplo, nombramos la clase MyClass. Aprender\u00e1s m\u00e1s sobre clases en los pr\u00f3ximos m\u00f3dulos.\r\n<br></br>\r\n\tEn Java, cada aplicaci\u00f3n tiene un punto de entrada, o un punto de partida, el cual es un m\u00e9todo llamado main.\r\n<br></br>\r\nEl metodo main\r\n<br></br>\r\n\tPara ejecutar nuestro programa, el m\u00e9todo main debe ser id\u00e9ntico a esta firma:\r\n<br></br>\r\n\tpublic static void main(String[ ] args)\r\n<br></br>\r\n\r\n<ul>\r\n&emsp;\t<li> public: cualquiera puede accederlo </li>\r\n&emsp;\t<li> static: el m\u00e9todo puede ser ejecutado sin crear una instancia de la clase que contiene el m\u00e9todo main </li>\r\n&emsp;\t<li> void: el m\u00e9todo no retorna ning\u00fan valor </li>\r\n&emsp;\t<li> main: el nombre del m\u00e9todo </li>\r\n\r\n</ul>\r\n<br></br>\r\nPor ejemplo, el siguiente c\u00f3digo declara un m\u00e9todo llamado test, el cual no retorna nada y no tiene par\u00e1metros:\r\n<br></br>\r\n<br></br>\r\n\r\n&emsp;\tvoid test()\r\n<br></br>\r\nLos par\u00e1metros del m\u00e9todo son declarados dentro de los par\u00e9ntesis que siguen al nombre del m\u00e9todo.\r\nPara el caso de main, es un arreglo de strings llamado args. Lo estaremos utilizando en nuestra pr\u00f3xima lecci\u00f3n,\r\nas\u00ed que no te preocupes si no lo entiendes todo por ahora.\r\n<br></br>\r\n\r\nSystem.out.println()\r\n<br></br>\r\nSeguidamente est\u00e1 el cuerpo del m\u00e9todo main, delimitado entre llaves:\r\n<br></br>\r\nEl m\u00e9todo println imprime una l\u00ednea de texto en la pantalla.\r\nLa clase System y su flujo out son utilizados para acceder al m\u00e9todo println.\r\n<br></br>\r\nPuede pasar un texto diferente como el par\u00e1metro para el m\u00e9todo println para que sea impreso.\r\n\r\n<br></br>\r\n&emsp;\tclass MyClass {\r\n<br></br>\r\n&emsp;&emsp;\t\t public static void main(String[ ] args) {\r\n<br></br>\r\n&emsp;&emsp;\t\t\tSystem.out.println(\"I am learning Java\");\r\n<br></br>\r\n&emsp;&emsp;\t\t}\r\n<br></br>\r\n&emsp;   }\r\n\r\n<br></br>\r\nEn Java, cada declaraci\u00f3n de c\u00f3digo debe finalizar con un punto y coma.\r\n<br></br>\r\nRecuerda: no utilices punto y coma despu\u00e9s de las declaraciones de m\u00e9todos y clases que siguen\r\ncon un cuerpo que ha sido definido utilizando llaves.\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9DE_Z4L8urI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>Tema 3:  Comentarios en Java</h3>\r\n<br></br>\r\nComentarios\r\n<br></br>\r\nEl prop\u00f3sito de incluir comentarios en tu c\u00f3digo es para explicar lo que el c\u00f3digo est\u00e1 haciendo.\r\nJava soporta tanto comentarios de una l\u00ednea como comentarios de varias l\u00edneas. Todos los caracteres\r\nque aparecen dentro de un comentario son ignorados por el compilador Java.\r\n<br></br>\r\nUn comentario de una sola l\u00ednea comienza con dos barras inclinadas y contin\u00faa hasta llegar al final de la l\u00ednea.\r\n<br></br>\r\n&emsp;\tPor Ejemplo:\r\n<br></br>\r\n&emsp;\t/ this is a single-line comment\r\n&emsp;\tx = 5; // a single-line comment after code\r\n\r\n<br></br>\r\nA\u00f1adir comentarios a medida que escribes c\u00f3digo es una buena pr\u00e1ctica, ya que ellos proveen aclaratorias y descripciones\r\ncuando necesitas revisar el c\u00f3digo posteriormente, as\u00ed como para otros programadores que pueden necesitar leerlo.\r\n<br></br>\r\nComentarios Multilineas\r\n<br></br>\r\nJava tambi\u00e9n ofrece soporte para comentarios que se expanden en m\u00faltiples l\u00edneas. Este tipo de comentario debes iniciarlos\r\ncon una barra inclinada seguida de un asterisco, y finalizan con un asterisco seguido de una barra inclinada.\r\n<br></br>\r\n&emsp;\tPor Ejemplo\r\n<br></br>\r\n&emsp;\t/*  This is also a\r\n&emsp;      comment spanning\r\n&emsp;  \tmultiple lines */\r\n<br></br>\r\nF\u00edjate que Java no soporta comentarios de varias l\u00edneas anidados.\r\nSin embargo, puedes anidar comentarios de una l\u00ednea dentro de comentarios multil\u00ednea.\r\n<br></br>\r\n<br></br>\r\n&emsp;\t/* This is a single-line comment:\r\n<br></br>\r\n&emsp;\t    // a single-line comment\r\n<br></br>\r\n&emsp;\t */\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/3YUfVsQ15Mw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3> tema 3: Variables </h3>\r\n<br></br>\r\nLas variables almacenan data para ser procesada.<br></br>\r\nUna variable le es dado un nombre (o identificador), como area, edad, altura y similar.  El nombre identifica de manera \u00fanica cada variable,\r\n asignando un valor a la variable y tomando el valor almacenado.\r\n<br></br>\r\nLas variables tienen tipos. Algunos ejemplos:<br></br>\r\n- int: para enteros (n\u00fameros enteros) como 123 y -456<br></br>\r\n- double: para n\u00fameros de punto flotante o reales con puntos decimales opcionales y partes fraccionables en notaci\u00f3n fija o cient\u00edfica, como 3.1416, -55.66.<br></br>\r\n- String: para textos como \"Hola\" o \"\u00a1Buenos D\u00edas!\". Las cadenas de texto est\u00e1n delimitadas dentro de comillas dobles.<br></br>\r\n\r\nPuedes declarar una variable de un tipo y asignarle un valor.\r\n<br>\r\n&emsp;\tEjemplos:<br></br>\r\n&emsp;\t*********************<br></br>\r\n&emsp;\tString name = \"David\";<br></br>\r\n&emsp;\t*********************<br></br>\r\n<br></br>\r\nEsto crear\u00e1 una variable llamada name del tipo String, y le asignar\u00e1 el valor \"David\".\r\n<br></br>\r\nEs importante notar que una variable est\u00e1 asociada con un tipo, y s\u00f3lo es capaz de almacenar valores de ese tipo en particular.\r\n<br></br>Por ejemplo, una variable int puede almacenar valores enteros, como 123; pero no puede almacenar valores reales, como 12.34 \u00f3 textos, como \"Hola\".\r\n\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/OyBibRaS1Bk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>tema 4: Los operadores Matematicos</h3>\r\n<br></br>\r\nJava provee un amplio conjunto de operadores para utilizarse en la manipulaci\u00f3n de variables.\r\n Un valor utilizado en cualquier lado del operador es llamado un operando.\r\n<br></br>\r\nPor ejemplo, en la expresi\u00f3n siguiente, los n\u00fameros 6 y 3 son operandos del operador suma:\r\n<br></br>\r\nint x= 6 + 3;\r\n<br></br>\r\nOperadores aritm\u00e9ticos Java:<br></br><br></br>\r\n+ adici\u00f3n<br></br>\r\n- sustracci\u00f3n<br></br>\r\n* multiplicaci\u00f3n<br></br>\r\n/ divisi\u00f3n<br></br>\r\n% m\u00f3dulo<br></br>\r\n<br></br>\r\nAdision<br></br>\r\nEl operador + suma dos valores, como dos constantes, una constante y una variable, o una variable y otra variable\r\n<br></br>\r\nSustraccion<br></br>\r\nEl operador - sustrae un valor de otro\r\n<br></br>\r\nMultiplicacion<br></br>\r\nEl operador * Multiplica dos valores.\r\n<br></br>\r\nDivision<br></br>\r\nEl operados / divide un valor entre otro\r\n<br></br>\r\nModulo<br></br>\r\nEl operador matem\u00e1tico m\u00f3dulo (o resto) ejecuta una divisi\u00f3n entera de un valor entre otro valor, y retorna el resto\r\nde esa divisi\u00f3n.<br></br>\r\nEl operador para la operaci\u00f3n de m\u00f3dulo es el car\u00e1cter de porcentaje (%).\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/s--BIoXW2AE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>tema:5 Operadores de incremento y decremento</h3>\r\n<br></br>\r\nOperadores de Incremento\r\n<br></br>\r\nUn operador de incremento o decremento provee una manera m\u00e1s conveniente y compacta para incrementar o disminuir\r\nel valor de una variable en uno.\r\n<br></br>\r\nPor ejemplo, la declaraci\u00f3n x=x+1; puede ser simplificada a ++x;\r\n<br></br>\r\nint test = 5;<br></br>\r\n++test; //test is now 6\r\n<br></br>\r\nOperadores de decremento\r\n<br></br>\r\nEl operador decremento (--) es utilizado para disminuir el valor de una variable en uno.\r\n<br></br>\r\nint test = 5;<br></br>\r\n--test; //tst is now 4\r\n<br></br>\r\nOperadores de Asignacion<br></br>\r\nYa est\u00e1s familiarizado con el operador asignaci\u00f3n (=), el cual asigna un valor a una variable.\r\n<br></br>\r\nint value = 5;\r\n<br></br>\r\nEsto asigna el valor de 5 a la variable llamada \"value\" del tipo int.<br></br>\r\n\r\nJava provee varios operadores de asignaci\u00f3n para hacer m\u00e1s f\u00e1cil la escritura del c\u00f3digo.<br></br>\r\n\r\nAdicion y asignacion (+=):<br></br>\r\nint num1 = 4;<br></br>\r\nint num2 = 8;<br></br>\r\nnum2 += num1; // num2 = num2 + num1;<br></br>\r\n\r\n// num2 is 12 and num1 is 4<br></br>\r\n\r\nSustracion y asignacion (- =)\r\n\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UPeBOM_VOIs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>tema:6 strings</h3>\r\n<br></br>\r\nUn String (cadena de texto) es un objeto que representa una secuencia de caracteres.\r\nPor ejemplo, \"Hola\" es un string de 4 caracteres.\r\n<br></br>\r\nPor ejemplo:\r\n<br></br>\r\nstring s = \"NetCode\"<br></br>\r\n\r\nse puede definir un string vacio EJemplo: string str = \"\";<br></br>\r\n\r\nconcatenacion de Strings\r\nEl operador + (suma) entre cadenas de texto las junta para hacer una nueva cadena de texto (string).<br></br>\r\n El proceso es llamado concatenaci\u00f3n.<br></br>\r\n\r\nLa cadena de texto resultante en la primera colocada junto con la segunda.<br></br>\r\n\r\npor ejemplo:<br></br>\r\n\r\nString firstName, lastName;\r\n<br></br>\r\n&emsp;   firstName = \"David\";\r\n<br></br>\r\n&emsp;       lastName = \"Williams\";\r\n<br></br>\r\n&emsp;       System.out.println(\"My name is \" + firstName +\" \"+lastName);\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YMyJLs22uY4\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>Tema:7 Declaraciones condicionales. </h3>\r\n<br></br>\r\nToma de decisiones\r\n<br></br>\r\nLas declaraciones condicionales son usadas para ejecutar acciones diferentes basadas en condiciones diferentes.\r\n<br></br>\r\nLa declaraci\u00f3n if es una de las declaraciones condicionales m\u00e1s frecuente utilizadas.\r\n<br></br>\r\nSi la expresi\u00f3n condicional de la declaraci\u00f3n if eval\u00faa a true (verdadero), el bloque de c\u00f3digo dentro de la declaraci\u00f3n if es ejecutado.\r\n Si la expresi\u00f3n eval\u00faa a false (falso), el primer conjunto de c\u00f3digo despu\u00e9s del final de la declaraci\u00f3n if (despu\u00e9s de las llaves de cerre) es ejecutado.\r\n<br></br>\r\n&emsp;if (condition){<br></br>\r\n&emsp;&emsp;   //Executes when the condition is true<br></br>\r\n&emsp;}\r\n<br></br>\r\nCualquier de los siguientes operadores de comparaci\u00f3n pueden ser utilizados para formar la condici\u00f3n:\r\n< menor que<br></br>\r\n> mayor que<br></br>\r\n!= no igual que<br></br>\r\n== igual que<br></br>\r\n<= menor o igual que<br></br>\r\n>= mayor o igual que\r\n<br></br>\r\nint x = 7;<br></br>\r\n\r\n&emsp;if (x < 42){<br></br>\r\n&emsp;&emsp;    System.out.println(\"Hi\");<br></br>\r\n&emsp;}\r\n\r\n\r\nLas declaraciones if ..... else\r\n\r\nUna declaraci\u00f3n if puede venir seguida por una declaraci\u00f3n opcional else, la cual se ejecuta cuando la condici\u00f3n se eval\u00faa como falsa.\r\n\r\nint age = 30;\r\n\r\nif (age <  16){\r\n    System.out.println(\"Too young\");\r\n}\r\nelse{\r\n    System.out.println(\"Welcome!\");\r\n}\r\n\r\nComo \"age\" es igual a 30, la condici\u00f3n en la declaraci\u00f3n if eval\u00faa a falso y la declaraci\u00f3n else es ejecutada.\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/b2ZtZndiT1Y\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3> Tema:8 Declaraciones if anidadas. </h3>\r\n <br></br>\r\nPuedes utilizar una declaracion if-else dentro de otra declaracion if o else.\r\n <br></br>\r\nPor ejemplo:\r\n <br></br>\r\nint age = 25;\r\n  <br></br>       \r\n&emsp;if(age > 0) { <br></br>\r\n            \r\n&emsp;&emsp;    if(age > 16) { <br></br>\r\n                \r\n&emsp;&emsp;&emsp;    System.out.println(\"Welcome!\"); <br></br>\r\n            \r\n&emsp;&emsp;     } else { <br></br>\r\n               \r\n&emsp;&emsp;&emsp;         System.out.println(\"Too Young\"); <br></br>\r\n\r\n&emsp;&emsp;     } <br></br>\r\n        \r\n&emsp;} else { <br></br>\r\n&emsp;&emsp;System.out.println(\"Error\"); <br></br>\r\n}\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/m2O6BrPB8xQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    },
    {
        "Contenido": "<h3>Tema 9: Los operadores l\u00f3gicos son utilizados para combinar varias condiciones.</h3>\r\n<br></br>\r\nDigamos que quieres que tu programa imprima \"Welcome!\" s\u00f3lo cuando la variable\r\nage sea mayor que 18 y la variable money sea mayor que 500.\r\n<br></br>\r\nUna manera de lograr esto es usando declaraciones if anidadas:\r\n<br></br>\r\npublic class Program {<br></br>\r\n&emsp;    public static void main(String[] args) {<br></br>\r\n&emsp;        int age = 22;<br></br>\r\n&emsp;        int money = 800;<br></br>\r\n\r\n&emsp;        if (age > 18) {<br></br>\r\n&emsp;            if (money > 500) {<br></br>\r\n&emsp;                System.out.println(\"Welcome!\");<br></br>\r\n&emsp;            }<br></br>\r\n&emsp;&emsp;        }<br></br>\r\n&emsp;    }<br></br>\r\n}<br></br>\r\n\r\nSin embargo, utilizando el operador l\u00f3gico AND (&&) es una mejor manera:<br></br>\r\n\r\npublic class Program {<br></br>\r\n&emsp;    public static void main(String[] args) {<br></br>\r\n&emsp;       int age = 22;<br></br>\r\n&emsp;        int money = 800;<br></br>\r\n\r\n&emsp;&emsp;        if (age > 18 && money > 500) {<br></br>\r\n&emsp;&emsp;&emsp;            System.out.println(\"Welcome!\");<br></br>\r\n&emsp;&emsp;        }<br></br>\r\n&emsp;&emsp;    }<br></br>\r\n}<br></br>\r\n\r\n\r\nEl operador OR (||) valida si cualquiera de las condiciones es verdadera.\r\nLa condici\u00f3n resulta verdadera, si cualquier de los operandos eval\u00faa a verdadero.\r\n<br></br>\r\npublic class Program {<br></br>\r\n    public static void main(String[] args) {<br></br>\r\n        int age = 25;<br></br>\r\n        int money = 100;<br></br>\r\n\r\n        if (age > 18 || money > 500) {<br></br>\r\n            System.out.println(\"Welcome!\");<br></br>\r\n        }<br></br>\r\n    }<br></br>\r\n}<br></br>\r\n\r\n\r\nEl c\u00f3digo anterior imprimir\u00e1 \"Welcome!\" si \"age\" es mayor que 18 \u00f3 si \"money\" es mayor que 500.<br></br>\r\n\r\nEl operador l\u00f3gico NOT (!) es utilizado para revertir el estado l\u00f3gico de su operando.<br></br>\r\nSi una condici\u00f3n es verdadera, el operador l\u00f3gico NOT la convertir\u00e1 en falsa<br></br>\r\n\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_Os2cGZbW6k\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"
    }
]